{"version":3,"sources":["components/Manual.tsx","components/Logo.tsx","components/Header.tsx","components/img/mock1.png","components/img/mock2.png","components/img/mock4.png","components/img/mock5.png","components/img/mock6.png","components/Image.tsx","components/Outline.tsx","components/img/★作曲の構想に特化した新しいDTM.png","components/img/★音楽理論をシステムに内臓.png","components/img/manual_detail1.png","components/img/manual_detail2.png","components/img/manual_detail3.png","components/img/manual_detail4.png","components/img/manual_detail5.png","components/img/manual_detail6.png","components/img/manual_detail7.png","components/img/manual_detail8.png","components/img/manual_detail9.png","components/Modal.tsx","components/SectionCard.tsx","App.tsx","components/Guide.tsx","components/Inquiry.tsx","components/Link.tsx","components/Main.tsx","components/Footer.tsx","reportWebVitals.ts","index.tsx"],"names":["Manuacategory","_Logo","styled","div","_red","span","Logo","_Header","header","_Menulist","_Menurecord","li","Header","props","onClick","transitionPage","PageStatus","OUTLINE","window","open","GUIDE","MANUAL","INQUIRY","LINK","settings","dots","infinite","autoplay","autoplaySpeed","speed","slidesToShow","slidesToScroll","pauseOnHover","swipe","fade","items","title","img","img1","img2","img4","img5","img6","_Face","_Img","_Catch","_Catchtxt1","_Catchtxt2","Image","map","item","src","OutlineItems","detail","image","reverseflg","_Record","_Recordlist","_Detail","_Image","Outline","recordJSXList","forEach","record","i","push","alt","_Red","_Bullets","_Bound","manualDetail","manual1","manual2","manual3","manual4","manual5","manual6","manual7","manual8","manual9","_Directory","_Overlay","_Content","_Closebutton","button","Modal","show","manualKey","isModal","_SectionCard","_Recordlist2","SectionCard","setKey","cardKey","melodyitems","harmonaizeitems","_Title","_Cardlist","Manual","useState","setShow","num","setNum","melodyJSXList","_isShow","_key","harmonaizeJSXList","Kiso","Inquiry","Link","Main","status","Guide","getContentsJSX","_Footer","footer","_Footertxt","p","Footer","_Topcont","App","setStatus","page","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bae303cd.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport Modal from './Modal';\r\nimport SectionCard from './SectionCard';\r\nimport manual1 from './img/manual_detail1.png';\r\nimport manual2 from './img/manual_detail2.png';\r\nimport manual3 from './img/manual_detail3.png';\r\nimport manual4 from './img/manual_detail4.png';\r\nimport manual5 from './img/manual_detail5.png';\r\nimport manual6 from './img/manual_detail6.png';\r\nimport manual7 from './img/manual_detail7.png';\r\nimport manual8 from './img/manual_detail8.png';\r\nimport manual9 from './img/manual_detail9.png';\r\nimport copy from './img/copy.png';\r\nimport { useState } from \"react\";\r\n\r\nexport enum Manuacategory {\r\n    MELODY,\r\n    HARMONAIZE,\r\n    OTHER\r\n}\r\n\r\nconst melodyitems = [\r\n    {\r\n        title: `01.画面の見方`,\r\n        detail: `ここではメロディ画面の各項目について説明します。`,\r\n        image: manual1,\r\n    },\r\n    {\r\n        title: `02.クオンタイズについて`,\r\n        detail: `ノーツの入力幅を変更する方法`,\r\n        image: manual2,\r\n    },\r\n    {\r\n        title: `03.ノーツの配置/削除`,\r\n        detail: `ノーツの配置/削除方法`,\r\n        image: manual3,\r\n    },\r\n    {\r\n        title: `04.ノーツの音程を変える`,\r\n        detail: `ノーツの音程の変更方法`,\r\n        image: manual4,\r\n    },\r\n    {\r\n        title: `05.ノーツの幅を変える`,\r\n        detail: `ノーツの音の幅の変更方法`,\r\n        image: manual5,\r\n    },\r\n    {\r\n        title: `06.ノーツを移動する`,\r\n        detail: `ノーツの位置の変更方法`,\r\n        image: manual6,\r\n    },\r\n    {\r\n        title: `07.ノーツの複数選択`,\r\n        detail: `ノーツを複数選択する方法`,\r\n        image: manual7,\r\n    },\r\n    {\r\n        title: `08.フレーズをコピー`,\r\n        detail: `フレーズをコピー＆ペーストする方法`,\r\n        image: manual8,\r\n    },\r\n    {\r\n        title: `09.プレビュー再生`,\r\n        detail: `入力したメロディを聴く方法`,\r\n        image: manual9,\r\n    },\r\n];\r\n\r\nconst harmonaizeitems = [\r\n    {\r\n        title: `MMM`,\r\n        detail: `MMM`,\r\n        image: manual6,\r\n    },\r\n];\r\n\r\nconst Manual = (): JSX.Element => {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [num, setNum] = useState(-99);\r\n\r\n    const melodyJSXList: JSX.Element[] = [];\r\n    melodyitems.forEach((record, i) => {\r\n        melodyJSXList.push(\r\n            <SectionCard\r\n                cardKey={i}\r\n                image={record.image}\r\n                title={record.title}\r\n                detail={record.detail}\r\n                isModal={(_isShow) => {\r\n                    setShow(_isShow)\r\n                }}\r\n                setKey={(_key) => {\r\n                    setNum(_key)\r\n                }}\r\n            />\r\n        )\r\n    });\r\n\r\n    const harmonaizeJSXList: JSX.Element[] = [];\r\n    harmonaizeitems.forEach((record, i) => {\r\n        harmonaizeJSXList.push(\r\n            <SectionCard\r\n                cardKey={i + 9}\r\n                image={record.image}\r\n                title={record.title}\r\n                detail={record.detail}\r\n                isModal={(_isShow) => {\r\n                    setShow(_isShow)\r\n                }}\r\n                setKey={(_key) => {\r\n                    setNum(_key)\r\n                }}\r\n            />\r\n        )\r\n    });\r\n\r\n    return (<>\r\n        <_Record>\r\n            <_Title>メロディ</_Title>\r\n            <_Cardlist>\r\n                {melodyJSXList}\r\n            </_Cardlist>\r\n            <_Title>ハーモナイズ</_Title>\r\n            <_Cardlist>\r\n                {harmonaizeJSXList}\r\n            </_Cardlist>\r\n            <Modal isModal={(_isShow) => {\r\n                setShow(_isShow)\r\n            }}\r\n                show={show}\r\n                manualKey={num}></Modal>\r\n        </_Record>\r\n    </>\r\n    );\r\n};\r\n\r\nconst _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    margin-top: 20px;\r\n    /* background-Color: #111111; */\r\n`;\r\n\r\nconst _Title = styled.div`\r\n    font-size: 38px;\r\n    /* color: rgba(15, 7, 7, 0.719); */\r\n    color: rgba(256, 256, 256, 0.719);\r\n    font-weight: 500;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst _Cardlist = styled.div`\r\n    display: inline-block;\r\n    width: 1000px;\r\n    height: 100%;\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n`;\r\n\r\nexport default Manual;\r\n","import styled from \"styled-components\";\r\nconst Logo = () => {\r\n  return (\r\n    <_Logo>\r\n      <_red>L</_red>iCreSia\r\n    </_Logo>\r\n  );\r\n};\r\n\r\nconst _Logo = styled.div`\r\n    display: inline-block;\r\n    font-family: logo;\r\n    color: rgba(204, 204, 204, 0.76);\r\n    margin: 8px 10px;\r\n    font-weight: 600;\r\n    width: 400px;\r\n    text-align: left;\r\n    box-sizing: border-box;\r\n    padding-left: 20px;\r\n    font-size: 28px;\r\n    font-style: italic;\r\n`;\r\n\r\nconst _red = styled.span`\r\n    color: rgb(218, 66, 66);\r\n`;\r\n\r\nexport default Logo;\r\n","import Logo from './Logo';\r\nimport Menu from './Menu';\r\nimport styled from \"styled-components\";\r\nimport { PageStatus } from '../App';\r\n\r\nconst Header = (props: { transitionPage: (page: PageStatus) => void }) => {\r\n\r\n  return (\r\n    <_Header>\r\n      <Logo />\r\n      <_Menulist>\r\n        <_Menurecord onClick={() => { props.transitionPage(PageStatus.OUTLINE) }}>概要</_Menurecord>\r\n        <_Menurecord onClick={() => window.open(\"https://cyber-kohno.github.io/licresia_demo_app/\", \"_blank\")}>サービス</_Menurecord>\r\n        <_Menurecord onClick={() => { props.transitionPage(PageStatus.GUIDE) }}>使い方</_Menurecord>\r\n        <_Menurecord onClick={() => { props.transitionPage(PageStatus.MANUAL) }}>マニュアル</_Menurecord>\r\n        <_Menurecord onClick={() => { props.transitionPage(PageStatus.INQUIRY) }}>お問い合わせ</_Menurecord>\r\n        <_Menurecord onClick={() => { props.transitionPage(PageStatus.LINK) }}>リンク</_Menurecord>\r\n      </_Menulist>\r\n    </_Header>\r\n  );\r\n};\r\n\r\nconst _Header = styled.header`\r\n    display: block;\r\n    position: fixed;\r\n    z-index: 95;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 90px;\r\n    /* background-color: rgba(55, 15, 0, 0.9); */\r\n    background: linear-gradient(to bottom, black, rgba(0, 0, 0, 0)\r\n    );\r\n`;\r\n\r\nconst _Menulist = styled.div`\r\n    display: inline-block;\r\n    margin: 8px 10px;\r\n    text-align: right;\r\n    width: calc(100% - 460px);\r\n    vertical-align: middle;\r\n    /* background-color: rgba(255, 255, 255, 0.1); */\r\n`;\r\n\r\nconst _Menurecord = styled.li`\r\n    display: inline-block;\r\n    margin: 8px 10px;\r\n    display: inline-block;\r\n    font-family: logo;\r\n    font-size: 18px;\r\n    color: #eee;\r\n    /* font-weight: 600; */\r\n    user-select: none;\r\n    transition: color 300ms;\r\n    &:hover {\r\n      color: #999;\r\n  }\r\n`;\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/mock1.86c335a3.png\";","export default __webpack_public_path__ + \"static/media/mock2.b996c973.png\";","export default __webpack_public_path__ + \"static/media/mock4.cd5b260b.png\";","export default __webpack_public_path__ + \"static/media/mock5.d2004e5c.png\";","export default __webpack_public_path__ + \"static/media/mock6.eb9e21cc.png\";","import styled from \"styled-components\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport img1 from './img/mock1.png';\r\nimport img2 from './img/mock2.png';\r\nimport img3 from './img/mock3.png';\r\nimport img4 from './img/mock4.png';\r\nimport img5 from './img/mock5.png';\r\nimport img6 from './img/mock6.png';\r\n\r\nconst settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    autoplay: true,\r\n    autoplaySpeed: 5000,\r\n    speed: 2000,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    pauseOnHover: false,\r\n    swipe: false,\r\n    fade: true,\r\n};\r\n\r\nconst items = [\r\n    { title: \"name1\", img: img1 },\r\n    { title: \"name2\", img: img2 },\r\n    // { title: \"name3\", img: img3 },\r\n    { title: \"name4\", img: img4 },\r\n    { title: \"name5\", img: img5 },\r\n    { title: \"name6\", img: img6 },\r\n]\r\n\r\nconst Image = (props: any) => {\r\n    return (<>\r\n        <_Face>\r\n            <Slider {...settings}>\r\n                {items && items.map(item => {\r\n                    return (\r\n                        <div>\r\n                            <_Img src={item.img} />\r\n                        </div>\r\n                    )\r\n                })}\r\n            </Slider>\r\n            <_Catch>\r\n                <_Catchtxt1>クリエイティブはデバイスを超えて</_Catchtxt1>\r\n                <_Catchtxt2>ハーモナイズに特化した新しいDTM</_Catchtxt2>\r\n            </_Catch>\r\n        </_Face>\r\n    </>\r\n    );\r\n};\r\n\r\nconst _Face = styled.div`\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n    position: relative;\r\n`;\r\n\r\nconst _Img = styled.img`\r\n    width: 100%;\r\n    height: 700px;\r\n    object-fit: cover;\r\n    object-position: 90% 20%;\r\n`;\r\n\r\nconst _Catch = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    top: 100px;\r\n    left: 0;\r\n    z-index: 90;\r\n    box-sizing: border-box;\r\n    padding-top: 20px;\r\n    padding-bottom: 20px;\r\n    background: linear-gradient(to bottom, rgba(0, 0, 20, 0), rgba(0, 0, 20, 0.332), rgba(0, 0, 20, 0));\r\n`;\r\n\r\nconst _Catchtxt1 = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    text-align: center;\r\n    color: rgb(255, 255, 255);\r\n    filter: drop-shadow(10px 10px 4px #000000);\r\n    margin-top: 20px;\r\n    font-size: 40px;\r\n`;\r\n\r\nconst _Catchtxt2 = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    text-align: center;\r\n    color: rgb(255, 255, 255);\r\n    filter: drop-shadow(10px 10px 4px #000000);\r\n    margin-top: 20px;\r\n    display: inline-block;\r\n    font-size: 30px;\r\n`;\r\n\r\nexport default Image;\r\n","import { useState, useReducer, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport img1 from './img/★作曲の構想に特化した新しいDTM.png';\r\nimport img2 from './img/★音楽理論をシステムに内臓.png';\r\n\r\nconst OutlineItems = [\r\n    {\r\n        title: `★作曲の構想に特化した新しいDTM`,\r\n        detail: `Licresiaは、作曲に必要な2要素である、\r\n        「メロディ」と「ハーモニー」を、それぞれ専用のエディタで入力し、\r\n        まるでスケッチをするかのように、少ないプロセスで楽曲を作成することができます。\r\n        ハーモニーのエディタ画面は、曲の構成を把握する設計図としての役割を担っており、\r\n        「作曲の構想」というプロセスにおいて高い生産性を発揮します。`,\r\n        image: img1,\r\n        reverseflg: false\r\n    },\r\n    {\r\n        title: `★音楽理論をシステムに内臓`,\r\n        detail: `拍・コード進行・音階など、作曲において必要な考え方が、\r\n        システムに組み込まれており、曲構成の整合性を自動で管理します。\r\n        作曲の知識がなくても、セオリーに沿った作曲体験を提供します。\r\n        \r\n        用意された一般的なコード進行のサンプル（200種類以上）をロードすることで、\r\n        完全にゼロから作成するのではなく、\r\n        既存のハーモニーにメロディだけをつけるところから、作曲の楽しみを味わうことが可能です。\r\n        レベルに応じて少しずつステップアップしながら慣れていきましょう。`,\r\n        image: img2,\r\n        reverseflg: true\r\n    },\r\n];\r\n\r\nconst Outline = (): JSX.Element => {\r\n\r\n    const recordJSXList: JSX.Element[] = [];\r\n    OutlineItems.forEach((record, i) => {\r\n        if (record.reverseflg) {\r\n            recordJSXList.push(\r\n                <_Record>\r\n                    <div key={i}>\r\n                        <_Recordlist>\r\n                            <_Image src={record.image} alt=\"詳細\"></_Image>\r\n                        </_Recordlist>\r\n                        <_Recordlist>\r\n                            <_Catch>\r\n                                {record.title}\r\n                            </_Catch>\r\n                            <_Detail>\r\n                                {record.detail}\r\n                            </_Detail>\r\n                        </_Recordlist>\r\n                    </div>\r\n                </_Record>\r\n            );\r\n        } else {\r\n            recordJSXList.push(\r\n                <_Record>\r\n                    <div key={i}>\r\n                        <_Recordlist>\r\n                            <_Catch>\r\n                                {record.title}\r\n                            </_Catch>\r\n                            <_Detail>\r\n                                {record.detail}\r\n                            </_Detail>\r\n                        </_Recordlist>\r\n                        <_Recordlist>\r\n                            <_Image src={record.image} alt=\"詳細\"></_Image>\r\n                        </_Recordlist>\r\n                    </div>\r\n                </_Record>\r\n            );\r\n        }\r\n    });\r\n\r\n    return (<>\r\n        <_Record>\r\n            {recordJSXList}\r\n        </_Record>\r\n    </>\r\n    );\r\n};\r\n\r\nconst _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    margin-top: 20px;\r\n    vertical-align: top;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst _Recordlist = styled.div`\r\n    display: inline-block;\r\n    width: 550px;\r\n    height: 600px;\r\n    margin: 10px;\r\n    padding: 10px;\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n    position: relative;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Catch = styled.div`\r\n    display: inline-block;\r\n    font-size: 38px;\r\n    color: rgba(255, 255, 255, 0.719);\r\n    font-weight: 400;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    font-size: 16px;\r\n    line-height: 28px;\r\n    color: rgb(255, 255, 255);\r\n    white-space: pre-line;\r\n`;\r\n\r\nconst _Image = styled.img`\r\n    width: 550px;\r\n    height: 600px;\r\n    border-radius: 5px;\r\n    object-fit: contain;\r\n`;\r\n\r\nexport default Outline;\r\n","export default __webpack_public_path__ + \"static/media/★作曲の構想に特化した新しいDTM.e12e7c24.png\";","export default __webpack_public_path__ + \"static/media/★音楽理論をシステムに内臓.78661c51.png\";","export default __webpack_public_path__ + \"static/media/manual_detail1.16144359.png\";","export default __webpack_public_path__ + \"static/media/manual_detail2.1a5095d9.png\";","export default __webpack_public_path__ + \"static/media/manual_detail3.f99be2ea.png\";","export default __webpack_public_path__ + \"static/media/manual_detail4.37cd249f.png\";","export default __webpack_public_path__ + \"static/media/manual_detail5.0fae3dd6.png\";","export default __webpack_public_path__ + \"static/media/manual_detail6.fb57f8ae.png\";","export default __webpack_public_path__ + \"static/media/manual_detail7.298c2d03.png\";","export default __webpack_public_path__ + \"static/media/manual_detail8.bf97c0a7.png\";","export default __webpack_public_path__ + \"static/media/manual_detail9.5d95d47c.png\";","import styled from \"styled-components\";\r\nimport manual1 from './img/manual_detail1.png';\r\nimport manual2 from './img/manual_detail2.png';\r\nimport manual3 from './img/manual_detail3.png';\r\nimport manual4 from './img/manual_detail4.png';\r\nimport manual5 from './img/manual_detail5.png';\r\nimport manual6 from './img/manual_detail6.png';\r\nimport manual7 from './img/manual_detail7.png';\r\nimport manual8 from './img/manual_detail8.png';\r\nimport manual9 from './img/manual_detail9.png';\r\nimport Manual from \"./Manual\";\r\n\r\nconst _Red = styled.span`\r\n　　color:red;\r\n`;\r\n\r\nconst _Bullets = styled.span`\r\n　　font-weight: bold;\r\n`;\r\n\r\nconst _Bound = styled.span`\r\n　　font-family: sans-serif;\r\n　　font-weight: bold;\r\n`;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    font-family: serif;\r\n    width: 600px;\r\n    font-size: 16px;\r\n    line-height: 28px;\r\n    color: rgb(0, 0, 0);\r\n    white-space: pre-line;\r\n    text-align: left;\r\n    vertical-align: top;\r\n    margin-top: 50px;\r\n    white-space: pre-line;\r\n`;\r\n\r\nconst manualDetail = [\r\n    {\r\n        title: `01.画面の見方`,\r\n        image: manual1,\r\n        detail: <_Detail><_Bullets>①ノーツ</_Bullets><br />\r\n            &emsp;音程と音を鳴らす長さを表したもの。<br />\r\n            &emsp;主音、音階の構成音の場合は赤、非構成音の場合は黄色になります。<br />\r\n            &emsp;ノーツ入力欄の背景色が白の音は主音、薄いグレーは音階の構成音、<br />\r\n            &emsp;濃いグレーは非構成音を表しています。<br />\r\n            <_Bullets>②音程</_Bullets><br />\r\n            &emsp;音の高さが表示されています。<br />\r\n            &emsp;A～G#が音程、hihiやhiがオクターブを表しています。<br />\r\n            <_Bullets>③タイムライン</_Bullets><br />\r\n            &emsp;音を鳴らすタイミングや長さの基準となる時間が表示されています。<br />\r\n            &emsp;メモリの上の１や２は小節を表しています。<br />\r\n            <_Bullets>④楽器一覧</_Bullets><br />\r\n            &emsp;どの楽器でメロディを鳴らすかを選択できます。<br />\r\n            <_Bullets>⑤クオンタイズ</_Bullets><br />\r\n            &emsp;ノーツを扱う際の基準となる幅を変更できます。</_Detail>\r\n    },\r\n    {\r\n        title: `02.クオンタイズについて`,\r\n        image: manual2,\r\n        detail: <_Detail>ノーツを扱う際の入力する幅を変更することが出来ます。<br />\r\n            <br />\r\n            <_Bullets>①１６ボタン</_Bullets><br />\r\n            &emsp;１６分の幅でノーツの入力することが出来ます。<br />\r\n            <_Bullets>②８ボタン</_Bullets><br />\r\n            &emsp;８分の幅でノールの入力をすることが出来ます。<br />\r\n            <_Bullets>③４ボタン</_Bullets><br />\r\n            &emsp;４分の幅でノーツの入力をすることが出来ます。<br />\r\n            <_Bullets>④/３ボタン</_Bullets><br />\r\n            &emsp;選択中の幅の１/３の幅でノーツを入力することが出来ます。<br />\r\n            &emsp;/３ボタンは８、４分の場合、選択することが出来ます。</_Detail>\r\n    },\r\n    {\r\n        title: `03.ノーツの配置/削除`,\r\n        image: manual3,\r\n        detail: <_Detail>ノーツを配置したい箇所の始点と終点までをマウスでドラッグすることで配置できます。<br />\r\n            <br />\r\n            ノーツを入力する際に後ろにノーツが入力されている場合、<br />\r\n            そのノーツまでノーツの幅を広げることができます。<br />\r\n            <br />\r\n            配置する箇所(始点)、ノーツの幅の広がる長さはクオンタイズに依存します。<br />\r\n\r\n            ノーツをフォーカスし、<_Bound>A</_Bound>を押すことで<br />\r\n            フォーカスしたノーツと同じノーツがフォーカスしたノーツの後ろに作成することができます。<br />\r\n            &emsp;<_Red>※選択した音の後にすでに音が入力されている場合、同じ音を作成することはできません。</_Red><br />\r\n            <br />\r\n            ノーツを削除する方法については、消したいノーツを右クリックもしくは<br />\r\n            消したいノーツがフォーカスされている状態で<_Bound>deleteキー</_Bound>を押すことで選択した音を消すことができます。</_Detail>\r\n    },\r\n    {\r\n        title: `04.ノーツの音程を変える`,\r\n        image: manual4,\r\n        detail: <_Detail>ノーツがフォーカスされている状態で入力されている音程とは別の音程をクリックすることで音程を変更することができます。<br />\r\n            <br />\r\n            音程を変更したいノーツを選択した状態で<_Bound>矢印キーの上下</_Bound>で半音ずつノーツの高さを変更できます。<br />\r\n            <br />\r\n            <_Bound>C+矢印キー上下</_Bound>で音階の構成音で音程を上下させることができます。<br />\r\n            <_Bound>X+矢印キー上下</_Bound>で1つ下または1つ下のオクターブに変更できます。</_Detail>\r\n    },\r\n    {\r\n        title: `05.ノーツの幅を変える`,\r\n        image: manual5,\r\n        detail: <_Detail>入力したノーツの右端をドラッグすることでノーツの幅を変更することができます。<br />\r\n            幅を変更したいノーツの後にノーツが存在する場合、<br />\r\n            入力されているノーツまでしかノーツの幅を広げることができません。<br />\r\n            <br />\r\n            ノーツの伸縮の幅はクオンタイズに依存します。<br />\r\n            ノーツの後に隙間がない場合、ノーツの幅を広げることはできません。<br />\r\n            <br />\r\n            幅を変更したいノーツを選択し、<_Bound>F+矢印キー左右</_Bound>を押すことでノーツの長さを変更できます。</_Detail>\r\n    },\r\n    {\r\n        title: `06.ノーツを移動する`,\r\n        image: manual6,\r\n        detail: <_Detail>入力したノーツの左端をドラッグすることでノーツを移動することができます。<br />\r\n            <br />\r\n            移動したいノーツの前後にノーツが入力されている場合、<br />\r\n            入力されているノーツの間を移動することができます。<br />\r\n            <br />\r\n            移動する量はクオンタイズに依存します。<br />\r\n            ノーツの前後に移動させる隙間がない場合、ノーツを移動することはできません。<br />\r\n            <br />\r\n            移動したいノーツを選択し、<_Bound>D+矢印キー左右</_Bound>を押すことでノーツの場所を変更できます。</_Detail>\r\n    },\r\n    {\r\n        title: `07.ノーツの複数選択`,\r\n        image: manual7,\r\n        detail: <_Detail>タイムライン上でドラッグすることでノーツの複数選択を行うことができます。<br />\r\n            <br />\r\n            ノーツの移動などを行う際、<br />\r\n            いくつかのノーツを複数選択することでまとめて移動、削除、コピーすることが可能です。<br />\r\n            <br />\r\n            <_Bound>shift+矢印キー左右</_Bound>を押すことで複数選択することができます。</_Detail>\r\n    },\r\n    {\r\n        title: `08.フレーズをコピー`,\r\n        image: manual8,\r\n        detail: <_Detail>コピーをしたいノーツを選択または複数選択した状態で、<_Bound>Ctrl+C</_Bound>でノーツをコピーすることができます。<br />\r\n        <br />\r\n        その後、<_Bound>Ctrl+V</_Bound>でコピーしたノーツが選択しているノーツの後ろにペーストされます。<br />\r\n        <br />\r\n        コピーした分の隙間がない場合、コピーしたノーツをペーストをすることはできません。</_Detail>\r\n    },\r\n    {\r\n        title: `09.プレビュー再生`,\r\n        image: manual9,\r\n        detail: <_Detail>画面上部の<_Bound>「Play/Pause」ボタン</_Bound>を押下することで、入力したメロディを再生することができます。<br />\r\n        <br />\r\n        メロディを再生中にもう一度押下することでメロディを停止することができます。<br />\r\n        メロディの再生はフォーカスされているノーツの位置から再生されます。<br />\r\n        <br />\r\n        <_Bound>「Emsamble/Solo」ボタン</_Bound>押すことで、再生モードを変更できます。<br />\r\n        Emsambleの場合、Harmonyで入力した音と合わせて入力したメロディが再生されます。<br />\r\n        Soloの場合、メロディのみが再生されます。<br />\r\n        <br />\r\n        ハーモニーのみ聞きたい場合は、<br />\r\n        再生したいハーモニーの箇所をカーソルでフォーカスした状態し、<br />\r\n        <_Bound>Zキー</_Bound>を押すことでフォーカスされたエリアのハーモニーのみが再生されます。</_Detail>\r\n    },\r\n    {\r\n        title: `MMM`,\r\n        image: manual1,\r\n        detail: <div>MMM</div>\r\n    },\r\n];\r\n\r\nconst Modal = (props: { isModal: (isShow: any) => void, show: any, manualKey: any }): JSX.Element => {\r\n\r\n    const showModal = (): JSX.Element => {\r\n        if (props.show) {\r\n            return (\r\n                <_Overlay>\r\n                    <_Content>\r\n                    <_Directory>メロディ＞{manualDetail[props.manualKey].title}</_Directory>\r\n                        <_Image src={manualDetail[props.manualKey].image}></_Image>\r\n                        {manualDetail[props.manualKey].detail}\r\n                    </_Content>\r\n                    <_Closebutton onClick={() => { props.isModal(false) }}></_Closebutton>\r\n                </_Overlay>\r\n            )\r\n        } else {\r\n            return (<></>);\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        {showModal()}\r\n    </>\r\n    );\r\n};\r\n\r\nconst _Directory = styled.div`\r\n　　text-align: left;\r\n　　margin-top: 10px;\r\n　　font-size: 18px;\r\n　　font-weight: bold;\r\n`;\r\n\r\nconst _Overlay = styled.div`\r\n    position:fixed;\r\n    top:0;\r\n    left:0;\r\n    width:100%;\r\n    height:100%;\r\n    background-color:rgba(0,0,0,0.5);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst _Content = styled.div`\r\n    overflow-y: auto;\r\n    overflow-y: scroll;\r\n    z-index:3;\r\n    height:60%;\r\n    padding: 1em;\r\n    background:#fff;\r\n`;\r\n\r\nconst _Image = styled.img`\r\n    width: 600px;\r\n    height: 400px;\r\n    border-radius: 5px;\r\n    margin-left: 25px;\r\n    margin-right: 25px;\r\n    margin-top: 30px;\r\n    object-fit: contain;\r\n    z-index:3;\r\n`;\r\n\r\n\r\n\r\nconst _Closebutton = styled.button`\r\n  display: block;\r\n  position: absolute;\r\n  top:110px;\r\n  right:230px;\r\n  width: 30px;\r\n  height: 30px;\r\n  border: 2px solid rgb(255, 255, 255); /* 枠の調整 */\r\n  border-radius: 50%;  /* 丸みの度合い */\r\n  background: rgba(255,255,255,0);\r\n  &:after{\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    width: 3px; /* 棒の幅（太さ） */\r\n    height: 22px; /* 棒の高さ */\r\n    background: rgb(255, 255, 255); /* バツ印の色 */\r\n    transform: translate(-50%,-50%) rotate(-45deg);\r\n  }\r\n  &:before{\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    width: 3px; /* 棒の幅（太さ） */\r\n    height: 22px; /* 棒の高さ */\r\n    background: rgb(255, 255, 255); /* バツ印の色 */\r\n    transform: translate(-50%,-50%) rotate(45deg);\r\n  }\r\n`;\r\n\r\n\r\n\r\nexport default Modal;\r\n","import styled from \"styled-components\";\r\nimport Modal from './Modal';\r\nimport { useState } from \"react\";\r\n\r\ntype SectionCardProps = {\r\n    image: string;\r\n    title: string;\r\n    detail: string;\r\n};\r\n\r\nconst SectionCard = (props: {cardKey: number, image: string, title: string, detail: string, isModal: (isShow: any) => void, setKey: (key: any) => void }): JSX.Element => {\r\n\r\n    function setState(){\r\n        props.isModal(true)\r\n        props.setKey(props.cardKey)\r\n    }\r\n\r\n    return (<>\r\n        <_SectionCard onClick={() => {setState()}}>\r\n            <_Recordlist>\r\n                <_Image src={props.image} alt=\"image\"></_Image>\r\n            </_Recordlist>\r\n            <_Recordlist2>\r\n                <_Catch>\r\n                    {props.title}\r\n                </_Catch>\r\n                <_Detail>\r\n                    {props.detail}\r\n                </_Detail>\r\n            </_Recordlist2>\r\n        </_SectionCard>\r\n    </>\r\n    );\r\n};\r\n\r\nconst _SectionCard = styled.div`\r\n    display: inline-block;\r\n    width: 400px;\r\n    height: 200px;\r\n    margin-top: 20px;\r\n    /* background-Color: #333333; */\r\n    background-Color: white;\r\n    border: solid;\r\n    margin-bottom: 20px;\r\n    margin-right: 20px;\r\n    text-align: left;\r\n    &:hover{\r\n        /* background-Color: rgba(0,0,0,0.5); */\r\n        background-Color: #A7F1FF;\r\n    }\r\n`;\r\n\r\nconst _Recordlist = styled.div`\r\n    display: inline-block;\r\n    margin: 5px;\r\n    padding: 10px;\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n    position: relative;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Recordlist2 = styled.div`\r\n    display: inline-block;\r\n    width: 100px;\r\n    height: 200px;\r\n    margin: 10px;\r\n    padding: 10px;\r\n    box-sizing: border-box;\r\n    vertical-align: top;\r\n    position: relative;\r\n    text-align: left;\r\n`;\r\n\r\nconst _Catch = styled.div`\r\n    display: inline-block;\r\n    width: 180px;\r\n    font-size: 15px;\r\n    /* color: #E6FFE9; */\r\n    color: #000000;\r\n    margin-bottom: 20px;\r\n    /* border-bottom: 2px solid #E6FFE9; */\r\n    border-bottom: 2px solid #000000;\r\n    font-weight: bold;\r\n`;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    width: 170px;\r\n    font-size: 12px;\r\n    /* color: #E6FFE9; */\r\n    color: #000000;\r\n`;\r\n\r\nconst _Image = styled.img`\r\n    width: 165px;\r\n    height: 150px;\r\n    border-radius: 5px;\r\n    object-fit: contain;\r\n`;\r\n\r\nexport default SectionCard;\r\n","import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Header from './components/Header';\r\nimport Image from './components/Image';\r\nimport Main from './components/Main';\r\nimport Footer from './components/Footer';\r\n\r\nexport enum PageStatus {\r\n  OUTLINE,\r\n  GUIDE,\r\n  MANUAL,\r\n  INQUIRY,\r\n  LINK\r\n}\r\n\r\nfunction App() {\r\n\r\n  const [status, setStatus] = useState<PageStatus>(PageStatus.MANUAL);\r\n\r\n  return (\r\n    <>\r\n      <Header transitionPage={(page: PageStatus) => {\r\n        setStatus(page)\r\n      }} />\r\n      <Image />\r\n      <_Topcont>\r\n        <Main status={status} />\r\n      </_Topcont>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nconst _Topcont = styled.div`\r\n    display: block;\r\n    width: 100%;\r\n    background: linear-gradient(to right, rgb(60, 60, 60), rgb(0, 0, 0), rgb(60, 60, 60));\r\n    text-align: center;\r\n`;\r\n\r\n\r\nexport default App;\r\n","import styled from \"styled-components\";\r\n\r\nconst items = [\r\n    {\r\n        title: ``,\r\n        detail: ``,\r\n        image: ``,\r\n        reverseflg: false\r\n    },\r\n];\r\n\r\nconst Kiso = (): JSX.Element => {\r\n\r\n    return (<>\r\n        <_Record>\r\n            <_Catch>\r\n                使い方\r\n            </_Catch>\r\n            <_Detail>\r\n            </_Detail>\r\n        </_Record>\r\n    </>\r\n    );\r\n};\r\n\r\nconst _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    margin-top: 20px;\r\n    background-Color: rgb(236, 233, 72);\r\n`;\r\n\r\nconst _Catch = styled.div`\r\n    display: inline-block;\r\n    font-size: 38px;\r\n    color: rgba(255, 255, 255, 0.719);\r\n    font-weight: 500;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    font-size: 16px;\r\n    line-height: 28px;\r\n    color: rgb(255, 255, 255);\r\n`;\r\n\r\nconst _Image = styled.img`\r\n    width: 550px;\r\n    height: 600px;\r\n    border-radius: 5px;\r\n    object-fit: fill;\r\n`;\r\n\r\nexport default Kiso;\r\n","import styled from \"styled-components\";\r\n\r\nconst items = [\r\n    {\r\n        title: ``,\r\n        detail: ``,\r\n        image: ``,\r\n        reverseflg: false\r\n    },\r\n];\r\n\r\nconst Inquiry = (): JSX.Element => {\r\n\r\n    return (<>\r\n        <_Record>\r\n            <div>\r\n                <_Catch>\r\n                    問い合わせ\r\n                </_Catch>\r\n                <_Detail>\r\n                </_Detail>\r\n            </div>\r\n            <div>\r\n            </div>\r\n        </_Record>\r\n    </>\r\n    );\r\n};\r\n\r\nconst _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    margin-top: 20px;\r\n    background-Color: rgb(209, 86, 182);\r\n`;\r\n\r\nconst _Catch = styled.div`\r\n    display: inline-block;\r\n    font-size: 38px;\r\n    color: rgba(255, 255, 255, 0.719);\r\n    font-weight: 500;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    font-size: 16px;\r\n    line-height: 28px;\r\n    color: rgb(255, 255, 255);\r\n`;\r\n\r\nconst _Image = styled.img`\r\n    width: 550px;\r\n    height: 600px;\r\n    border-radius: 5px;\r\n    object-fit: fill;\r\n`;\r\n\r\nexport default Inquiry;\r\n","import styled from \"styled-components\";\r\n\r\nconst items = [\r\n    {\r\n        title: ``,\r\n        detail: ``,\r\n        image: ``,\r\n        reverseflg: false\r\n    },\r\n];\r\n\r\nconst Link = (): JSX.Element => {\r\n\r\n    return (<>\r\n        <_Record>\r\n            <_Catch>\r\n                リンク\r\n            </_Catch>\r\n            <_Detail>\r\n            </_Detail>\r\n        </_Record>\r\n    </>\r\n    );\r\n};\r\n\r\nconst _Record = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    margin-top: 20px;\r\n    background-Color: rgb(62, 123, 238);\r\n`;\r\n\r\nconst _Catch = styled.div`\r\n    display: inline-block;\r\n    font-size: 38px;\r\n    color: rgba(255, 255, 255, 0.719);\r\n    font-weight: 500;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst _Detail = styled.div`\r\n    display: inline-block;\r\n    font-size: 16px;\r\n    line-height: 28px;\r\n    color: rgb(255, 255, 255);\r\n`;\r\n\r\nconst _Image = styled.img`\r\n    width: 550px;\r\n    height: 600px;\r\n    border-radius: 5px;\r\n    object-fit: fill;\r\n`;\r\n\r\nexport default Link;\r\n","import styled from \"styled-components\";\r\nimport Outline from './Outline';\r\nimport Manual from './Manual';\r\nimport Guide from './Guide';\r\nimport Inquiry from './Inquiry';\r\nimport Link from './Link';\r\nimport { PageStatus } from '../App';\r\n\r\nexport type ContentsProps = {\r\n    status: PageStatus;\r\n}\r\n\r\nconst Main = (props: ContentsProps): JSX.Element => {\r\n\r\n    const getContentsJSX = (): JSX.Element => {\r\n        switch (props.status) {\r\n            case PageStatus.OUTLINE:\r\n                return <Outline />;\r\n            case PageStatus.GUIDE:\r\n                return <Guide />;\r\n            case PageStatus.MANUAL:\r\n                return <Manual />;\r\n            case PageStatus.INQUIRY:\r\n                return <Inquiry />;\r\n            case PageStatus.LINK:\r\n                return <Link />;\r\n            default:\r\n                return <></>;\r\n        }\r\n    };\r\n\r\n    return (<>\r\n        <div>\r\n            {getContentsJSX()}\r\n        </div>\r\n    </>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import styled from \"styled-components\";\r\n\r\nconst Footer = (props:any) => {\r\n  return(\r\n    <_Footer>\r\n        <_Footertxt>© LiCreSia</_Footertxt>\r\n    </_Footer>\r\n  );\r\n};\r\n\r\nconst _Footer= styled.footer`\r\n    height: 100px;\r\n    background-color: #034;\r\n    text-align: center;\r\n`;\r\n\r\nconst _Footertxt= styled.p`\r\n    display: inline-block;\r\n    margin: auto;\r\n    font-size: 24px;\r\n    color: seashell;\r\n    line-height: 100px;\r\n`;\r\n\r\nexport default Footer;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}